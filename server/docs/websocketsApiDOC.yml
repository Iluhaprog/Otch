asyncapi: '2.0.0'
info:
  title: Documention for WebSocketAPI of otch
  version: '0.0.1'
servers:
  production:
    url: www.otch.xyz
    protocol: wss
    description: This is documentation for WebSocketAPI of otch
    security:
      - basic: []
channels:
  messages/send?key={key}&a={a}&ci={ci}&ui={ui}:
    description: Send message for users in chat with key
    parameters:
      key: 
        schema:
          description: key of chat, when sending a message.
          type: string
      a:
        schema:
          description: action(c - create; u - update, d - delete, i        - file).
          type: string
      ui:
        schema:
          description: UserId Use when you send file in Blob.
          type: number
      ci:
        schema:
          description: ChatId Use when you send file in Blob.
          type: number
    publish:
      message:
        $ref: '#/components/messages/sended-message' 
  chats/deleteMember?ui={ui}&ck={ck}:
    description: Delete member from chat
    parameters: 
      ui:
        schema: 
          description: Id of user, that connected
          type: number
      ck:
        schema:
          description: Chat key to connect to
          type: string
    publish:
      message:
        $ref: '#/components/messages/delete-message'
  chats/updateChatList:
    description: Notifying users about adding to chat
    publish:
      message:
        $ref: '#/components/messages/notifying-message'
components:
  messages:
    sended-message:
      description: Data that should be in the request body 
      payload:
        type: object
        properties:
          userId:
            description: Id of user
            type: number
          chatId:
            description: Id of chat
            type: number
          message:
            description: Message that user write
            type: string
          creationDate:
            description: Date of creation this message
            type: string
    delete-message:
      description: Message with info about deleted member, chat admin and key of chat
      payload:
        type: object
        properties:
          adminId:
            description: Id of admin
            type: number
          memberId:
            description: Id of member who should delete
            type: number
          chatKey:
            description: Key of chat in that make deleting
            type: string
    notifying-message:
      description: Message with id of user, that should update self the chat list
      payload:
        type: object
        properties:
          userId:
            description: Id of user
            type: number
            
  securitySchemes:
    basic:
      type: userPassword